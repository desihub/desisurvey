# Workflow is based on the Astropy GitHub actions workflow, ci_workflows.yml
name: CI

on:
    push:
        branches:
            - '*'
        tags:
            - '*'
    pull_request:

jobs:
    tests:
        name: Unit tests
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: true
            matrix:
                include:
                    - os: ubuntu-latest
                      python-version: '3.13'
                      numpy-version: '<3'
                      scipy-version: '<1.16'
                      astropy-version: '<8'
                    - os: ubuntu-latest
                      python-version: '3.12'
                      numpy-version: '<2.3'
                      scipy-version: '<1.15'
                      astropy-version: '<8'
                    - os: ubuntu-latest
                      python-version: '3.11'
                      numpy-version: '<2.2'
                      scipy-version: '<1.14'
                      astropy-version: '<7.1'
                    - os: ubuntu-latest
                      python-version: '3.10'
                      numpy-version: '<2'
                      scipy-version: '<1.9'
                      astropy-version: '<7'

        steps:
            - name: Install system packages
              run: sudo apt install libbz2-dev subversion
            - name: Checkout code
              uses: actions/checkout@v4
            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v5
              with:
                python-version: ${{ matrix.python-version }}
            - name: Install Python dependencies
              run: |
                python -m pip install --upgrade pip setuptools wheel ephem pytz pytest
                python -m pip install "numpy${{ matrix.numpy-version }}" "scipy${{ matrix.scipy-version }}" "astropy${{ matrix.astropy-version }}"
            - name: Install DESI packages
              env:
                  DESIMODEL_VERSION: 0.19.3
              run: |
                python -m pip install desiutil speclite specsim
                python -m pip install git+https://github.com/desihub/desimodel.git@${DESIMODEL_VERSION}#egg=desimodel
            - name: Install desimodel data
              env:
                  DESIMODEL_DATA: branches/test-0.19
              run: install_desimodel_data --desimodel-version ${DESIMODEL_DATA}
            - name: Print Python package versions
              run: python -m pip freeze
            - name: Run the test
              run: pytest

    coverage:
        name: Test coverage
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: true
            matrix:
                os: [ubuntu-latest]
                python-version: ['3.10']

        steps:
            - name: Install system packages
              run: sudo apt install libbz2-dev subversion
            - name: Checkout code
              uses: actions/checkout@v4
            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v5
              with:
                python-version: ${{ matrix.python-version }}
            - name: Install Python dependencies
              run: |
                python -m pip install --upgrade pip setuptools wheel ephem pytz pytest pytest-cov coveralls
                python -m pip install "numpy<1.23" "scipy<1.9" "astropy<6.1"
            - name: Install DESI packages
              env:
                  DESIMODEL_VERSION: 0.19.3
              run: |
                python -m pip install desiutil speclite specsim
                python -m pip install git+https://github.com/desihub/desimodel.git@${DESIMODEL_VERSION}#egg=desimodel
            - name: Install desimodel data
              env:
                  DESIMODEL_DATA: branches/test-0.19
              run: install_desimodel_data --desimodel-version ${DESIMODEL_DATA}
            - name: Print Python package versions
              run: python -m pip freeze
            - name: Run the test with coverage
              run: pytest --cov
            - name: Coveralls
              env:
                COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: coveralls

    docs:
        name: Doc test
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                os: [ubuntu-latest]
                python-version: ['3.10']

        steps:
            - name: Checkout code
              uses: actions/checkout@v4
            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v5
              with:
                python-version: ${{ matrix.python-version }}
            - name: Install Python dependencies
              run: python -m pip install --upgrade pip setuptools wheel Sphinx sphinx-rtd-theme
            - name: Test the documentation
              run: sphinx-build -W --keep-going -b html doc doc/_build/html

    style:
        name: Style check
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                os: [ubuntu-latest]
                python-version: ['3.10']

        steps:
            - name: Checkout code
              uses: actions/checkout@v4
            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v5
              with:
                python-version: ${{ matrix.python-version }}
            - name: Install Python dependencies
              run: python -m pip install --upgrade pip setuptools wheel pycodestyle
            - name: Test the style; failures can be allowed if necessary
              # This is equivalent to an allowed falure.
              continue-on-error: true
              run: pycodestyle --count --statistics py/desisurvey
