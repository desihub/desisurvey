# Workflow is based on the Astropy GitHub actions workflow, ci_workflows.yml
name: CI

on:
    push:
        branches:
            - '*'
        tags:
            - '*'
    pull_request:

jobs:
    tests:
        name: Unit tests
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: true
            matrix:
                os: [ubuntu-latest]
                python-version: [3.7, 3.8]
                astropy-version: ['4.0.2', '4.2']  #, '<5.0']
        env:
            DESIMODEL_DATA: branches/test-0.13

        steps:
            - name: Checkout code
              uses: actions/checkout@v2
              with:
                fetch-depth: 0
            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v2
              with:
                python-version: ${{ matrix.python-version }}
            - name: Install Python dependencies
              run: |
                python -m pip install --upgrade pip wheel
                python -m pip install pytest
                python -m pip install git+https://github.com/desihub/desiutil.git@3.2.0#egg=desiutil
                python -m pip install git+https://github.com/desihub/desimodel.git@0.13.0#egg=desimodel
                svn export https://desi.lbl.gov/svn/code/desimodel/${DESIMODEL_DATA}/data
                python -m pip install git+https://github.com/desihub/specsim.git@v0.14#egg=specsim
                python -m pip install git+https://github.com/desihub/speclite.git@v0.13#egg=speclite
                python -m pip install -r requirements.txt
            - name: Run the test
              run: DESIMODEL=$(pwd) pytest

#   coverage:
#       name: Test coverage
#       runs-on: ${{ matrix.os }}
#       strategy:
#           fail-fast: true
#           matrix:
#               os: [ubuntu-latest]
#               python-version: [3.8]
#       env:
#           DESIUTIL_VERSION: 3.1.0
#           DESIMODEL_DATA: branches/test-0.12

#       steps:
#           - name: Checkout code
#             uses: actions/checkout@v2
#             with:
#               fetch-depth: 0
#           - name: Set up Python ${{ matrix.python-version }}
#             uses: actions/setup-python@v2
#             with:
#               python-version: ${{ matrix.python-version }}
#           - name: Install Python dependencies
#             run: |
#               python -m pip install --upgrade pip wheel
#               python -m pip install pytest pytest-cov coveralls
#               python -m pip install git+https://github.com/desihub/desiutil.git@${DESIUTIL_VERSION}#egg=desiutil
#               python -m pip install -r requirements.txt
#               svn export https://desi.lbl.gov/svn/code/desimodel/${DESIMODEL_DATA}/data
#           - name: Run the test with coverage
#             run: DESIMODEL=$(pwd) pytest --cov
#           - name: Coveralls
#             env:
#               GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#             run: coveralls

    docs:
        name: Doc test
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                os: [ubuntu-latest]
                python-version: [3.8]

        steps:
            - name: Checkout code
              uses: actions/checkout@v2
              with:
                fetch-depth: 0
            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v2
              with:
                python-version: ${{ matrix.python-version }}
            - name: Install Python dependencies
              run: python -m pip install --upgrade pip wheel Sphinx
            - name: Test the documentation
              run: sphinx-build -W --keep-going -b html doc doc/_build/html

